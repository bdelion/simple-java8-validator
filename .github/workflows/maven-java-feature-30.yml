name: Maven CI for Java for Feature/Bugfix Branch

on:
  push:
    branches-ignore:
      - 'develop'
      - 'release/*'
      - 'master'
      - 'hotfix/*'
      - 'support/*'

jobs:
  maven-build-test-verify:
    name: Maven test, package and deploy Java project
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Maven version
        run: mvn -version
        env:
          SERVER_USERNAME: $GITHUB_ACTOR
          SERVER_PASSWORD: ${{ secrets.MVN_PCKGS_REPO_TOKEN}}
      - name: Check out from version control
        uses: actions/checkout@v2
      - name: Cache Maven dependencies
        uses: actions/cache@v1
        env:
          cache-name: cache-maven-dependencies
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-${{ env.cache-name }}-
            ${{ runner.os }}-m2-
            ${{ runner.os }}-
      - name: Get Maven Project information
        id: maven-project-info
        run: |
          echo "$(mvn help:evaluate -Dexpression=project.groupId -q -DforceStdout --file pom.xml --settings .github/workflows/settings.xml)"
          echo "$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout --file pom.xml --settings .github/workflows/settings.xml)"
          echo "$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout --file pom.xml --settings .github/workflows/settings.xml)"
          echo "$(mvn help:evaluate -Dexpression=project.packaging -q -DforceStdout --file pom.xml --settings .github/workflows/settings.xml)"
          echo "::set-output name=SONAR_HOST_URL::$(mvn help:evaluate -Dexpression=sonar.host.url -q -DforceStdout --file pom.xml --settings .github/workflows/settings.xml)"
          echo "::set-output name=SONAR_PROJECT_KEY::$(mvn help:evaluate -Dexpression=sonar.projectKey -q -DforceStdout --file pom.xml --settings .github/workflows/settings.xml)"
        env:
          SERVER_USERNAME: $GITHUB_ACTOR
          SERVER_PASSWORD: ${{ secrets.MVN_PCKGS_REPO_TOKEN}}
      - name: Full
        run: mvn -U clean verify sonar:sonar -Pproject-controls-check -Dsonar.branch.name=${GITHUB_REF#refs/heads/} -Dsonar.gitlab.commit_sha=${GITHUB_SHA} --file pom.xml --settings .github/workflows/settings.xml
        env:
          SERVER_USERNAME: $GITHUB_ACTOR
          SERVER_PASSWORD: ${{ secrets.MVN_PCKGS_REPO_TOKEN}}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Add tags [SonarCloud.io]
        run: |
          curl -u "${{ secrets.SONAR_TOKEN }}" -X POST "${{ steps.maven-project-info.outputs.SONAR_HOST_URL }}/api/project_tags/set?project=${{ steps.maven-project-info.outputs.SONAR_PROJECT_KEY }}&tags=training.app,java"
